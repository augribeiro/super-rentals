{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","super-rentals/tests/acceptance/list-rentals-test.js","super-rentals/tests/lint/app.lint-test.js","super-rentals/tests/lint/templates.template.lint-test.js","super-rentals/tests/lint/tests.lint-test.js","super-rentals/tests/test-helper.js","super-rentals/tests/unit/routes/about-test.js","super-rentals/tests/unit/routes/contact-test.js","super-rentals/tests/unit/routes/index-test.js","super-rentals/tests/unit/routes/rentals-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"super-rentals/tests/acceptance/list-rentals-test\", [\"@ember/test-helpers\", \"ember-qunit\", \"qunit\"], function (_testHelpers, _emberQunit, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Acceptance | list-rentals', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _qunit.test)('should show rentals as the home page', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.equal((0, _testHelpers.currentURL)(), '/rentals', 'should redirect automatticaly');\n    });\n    (0, _qunit.test)('should link to information about the company.', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      await (0, _testHelpers.click)('.menu-about');\n      assert.equal((0, _testHelpers.currentURL)(), '/about', 'should navigate to about');\n    });\n    (0, _qunit.test)('should link to contact information.', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      await (0, _testHelpers.click)('.menu-contact');\n      assert.equal((0, _testHelpers.currentURL)(), '/contact', 'should navigate to contact');\n    });\n    (0, _qunit.test)('should list available rentals.', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.equal(this.element.querySelectorAll('.listing').length, 3, 'should display 3 listings');\n    });\n    (0, _qunit.test)('should filter the list of rentals by city.', async function (assert) {\n      assert(true);\n    });\n    (0, _qunit.test)('should show details for a selected rental', async function (assert) {\n      assert(true);\n    });\n  });\n});","define(\"super-rentals/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/about.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/about.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/contact.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/contact.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/rentals.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/rentals.js should pass ESLint\\n\\n');\n  });\n});","define(\"super-rentals/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('super-rentals/templates/about.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'super-rentals/templates/about.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('super-rentals/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'super-rentals/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('super-rentals/templates/contact.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'super-rentals/templates/contact.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('super-rentals/templates/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'super-rentals/templates/index.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('super-rentals/templates/rentals.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'super-rentals/templates/rentals.hbs should pass TemplateLint.\\n\\nsuper-rentals/templates/rentals.hbs\\n  6:0  error  Incorrect indentation for `  About Us\\n` beginning at L6:C0. Expected `  About Us\\n` to be at an indentation of 4 but was found at 2.  block-indentation\\n  11:0  error  Incorrect indentation for `<article>` beginning at L11:C0. Expected `<article>` to be at an indentation of 2 but was found at 0.  block-indentation\\n');\n  });\n});","define(\"super-rentals/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('acceptance/list-rentals-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/list-rentals-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/about-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/about-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/contact-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/contact-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/rentals-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/rentals-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"super-rentals/tests/test-helper\", [\"super-rentals/app\", \"super-rentals/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"super-rentals/tests/unit/routes/about-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | about', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:about');\n      assert.ok(route);\n    });\n  });\n});","define(\"super-rentals/tests/unit/routes/contact-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | contact', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:contact');\n      assert.ok(route);\n    });\n  });\n});","define(\"super-rentals/tests/unit/routes/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define(\"super-rentals/tests/unit/routes/rentals-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | rentals', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:rentals');\n      assert.ok(route);\n    });\n  });\n});","define('super-rentals/config/environment', [], function() {\n  var prefix = 'super-rentals';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('super-rentals/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}